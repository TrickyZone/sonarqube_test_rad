apiVersion: apps/v1
kind: Deployment
metadata:
  name: radar-service-backend
spec:
  selector:
    matchLabels:
      app: radar-service-backend
  replicas: 2
  template:
    metadata:
      labels:
        app: radar-service-backend
    spec:
      imagePullSecrets:
        - name: github-registry-token
      containers:
        - name: radar-service-k8s
          imagePullPolicy: IfNotPresent
          image: docker.pkg.github.com/knoldus/radar-service/radar-service:1.0.0
          livenessProbe:
            httpGet:
              path: /knoldus-backend/rest/radar-service/technology
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /knoldus-backend/rest/radar-service/technology
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 8
            successThreshold: 1
            failureThreshold: 3
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          ports:
            - containerPort: 8080
          env:   # Setting Enviornmental Variables
            - name: DB_HOST   # Setting Database host address from configMap
              value: "postgres-svc.postgres.svc.cluster.local"
            - name: DB_NAME  # Setting Database name from configMap
              value: "radar_service_db"
            - name: POSTGRES_USER  # Setting Database username from Secret
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials # Secret Name
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD # Setting Database password from Secret
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: POSTGRES_PASSWORD
      nodeSelector:
        nodetype: radar